<de.unisb.cs.st.javalanche.coverage.distance.ConnectionData>
  <connections>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>setRedundancyFactor</methodName>
        <desc>(I)V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>setRedundancyFactor</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>removeRequirementsFromSTSS</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>buildCardinalityList</methodName>
        <desc>(I)Ljava/util/LinkedHashSet;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getCoveringTests</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>removeTestsFromRSU</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getCoveringTests</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMinimumCostTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>findMinimumCostTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>removeTestsFromRSU</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>removeTestsFromRSU</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>incrementRedundancyFactor</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>incrementRedundancyFactor</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingReverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>sumPurchasePrices</methodName>
        <desc>(Ljava/util/Set;)D</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getPurchasePrice</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingOriginal</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingOriginal</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>toString</methodName>
        <desc>()Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>toString</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>removeTestsFromRSU</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>removeCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>getPurchasePrice</methodName>
        <desc>()D</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getPurchasePrice</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>setRequirementSubsetUniverse</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>setRequirementSubsetUniverse</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayInputStream</className>
        <methodName>available</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayInputStream</className>
        <methodName>available</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetEqualSets</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>isSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;)Z</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>verifyBufferSize</methodName>
        <desc>(I)V</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>verifyBufferSize</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>containsElements</methodName>
        <desc>(Ljava/util/Set;)Z</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>containsElements</methodName>
        <desc>(Ljava/util/Set;)Z</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findHighCoverageLowCostTests</methodName>
        <desc>(DDDD)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getCost</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getCoveringTests</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;ID)V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;ID)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCover</methodName>
        <desc>(Ljava/util/LinkedHashSet;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>equals</methodName>
        <desc>(Ljava/lang/Object;)Z</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>equals</methodName>
        <desc>(Ljava/lang/Object;)Z</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getIndex</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.AllTests</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.AllTests</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingReverse</methodName>
        <desc>(I)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingReverse</methodName>
        <desc>(I)Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMaximumAverageRedundancyFactorTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getRedundancyFactor</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>setRequirementSubsetSet</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>calculateAllRequirementRedundancy</methodName>
        <desc>()Ljava/util/ArrayList;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>setTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>setTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>removeTestsFromRSU</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetSubsetBigger</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertFalse</methodName>
        <desc>(Z)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingOriginal</methodName>
        <desc>(I)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>calculateRequirementRedundancy</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayInputStream</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>([BI)V</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayInputStream</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>([BI)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetActualSubset</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertTrue</methodName>
        <desc>(Z)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMinimumCostTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>setIndex</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>sumInnerCosts</methodName>
        <desc>()D</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getCost</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>calculateAllRequirementRedundancy</methodName>
        <desc>()Ljava/util/ArrayList;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getCoveringTestSetString</methodName>
        <desc>(Ljava/lang/String;)Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getCoveringTestSetString</methodName>
        <desc>(Ljava/lang/String;)Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingGreedy</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingGreedy</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingOriginal</methodName>
        <desc>(I)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingOriginal</methodName>
        <desc>(I)Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>setRequirementSubsetSet</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>setRequirementSubsetSet</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>setUp</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getCoveringTests</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findHighCoverageLowCostTests</methodName>
        <desc>(DDDD)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>findHighCoverageLowCostTests</methodName>
        <desc>(DDDD)Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>buildCardinalityList</methodName>
        <desc>(I)Ljava/util/LinkedHashSet;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>removeSingleTestSubsets</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>removeRequirementsFromSTSS</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>clearSingleTestSubsets</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>clearSingleTestSubsets</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>addTestToReducedSuite</methodName>
        <desc>(Lredupr/SingleTestSubset;Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>purchase</methodName>
        <desc>(D)V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>purchase</methodName>
        <desc>(D)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayInputStream</className>
        <methodName>read</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayInputStream</className>
        <methodName>read</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingRandom</methodName>
        <desc>(I)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetSubsetBigger</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>setExtraCost</methodName>
        <desc>(D)V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>setExtraCost</methodName>
        <desc>(D)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>addTestToReducedSuite</methodName>
        <desc>(Lredupr/SingleTestSubset;Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>removeRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>removeRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMaximumCostTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getCost</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>toString</methodName>
        <desc>()Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>toString</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>setName</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>setCoveringTestSet</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>setCoveringTestSet</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCover</methodName>
        <desc>(Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>removeRequirementSubsets</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>write</methodName>
        <desc>(I)V</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>verifyBufferSize</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>removeTestsFromRSU</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>setCost</methodName>
        <desc>(D)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCover</methodName>
        <desc>(Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingGreedy</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>containsElements</methodName>
        <desc>(Ljava/util/Set;)Z</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>getInputStream</methodName>
        <desc>()Ljava/io/InputStream;</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>getInputStream</methodName>
        <desc>()Ljava/io/InputStream;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>buildCardinalityList</methodName>
        <desc>(I)Ljava/util/LinkedHashSet;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>buildCardinalityList</methodName>
        <desc>(I)Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMinimumCoverageTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>size</methodName>
        <desc>(Ljava/util/Set;)I</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>size</methodName>
        <desc>(Ljava/util/Set;)I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getBestSingleTestSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;IILjava/lang/String;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getBestSingleTestSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;IILjava/lang/String;)Lredupr/SingleTestSubset;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>getOuterWhileExecuteList</methodName>
        <desc>()Ljava/util/ArrayList;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getOuterWhileExecuteList</methodName>
        <desc>()Ljava/util/ArrayList;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findHighRedundancyLowCostTests</methodName>
        <desc>(DDDD)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMaximumAverageRedundancyFactorTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>clearRequirementSubset</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>clearRequirementSubset</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.AllTests</className>
        <methodName>main</methodName>
        <desc>([Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.AllTests</className>
        <methodName>suite</methodName>
        <desc>()Ljunit/framework/TestSuite;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingRandom</methodName>
        <desc>(I)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingRandom</methodName>
        <desc>(I)Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCover</methodName>
        <desc>(Ljava/util/LinkedHashSet;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addToRequirementSubsetUniverse</methodName>
        <desc>(Ljava/util/Set;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>getInputStream</methodName>
        <desc>()Ljava/io/InputStream;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>setName</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>setName</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>sumPurchasePrices</methodName>
        <desc>(Ljava/util/Set;)D</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>sumPurchasePrices</methodName>
        <desc>(Ljava/util/Set;)D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>setUp</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>getExtraCost</methodName>
        <desc>()D</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getExtraCost</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>getCoveringTestSetString</methodName>
        <desc>(Ljava/util/Set;Ljava/lang/String;)Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getIndex</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>isSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;)Z</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findHighRedundancyLowCostTests</methodName>
        <desc>(DDDD)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getCost</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getNumberOfCurrentCardinalityCovers</methodName>
        <desc>(Lredupr/SingleTestSubset;Ljava/util/LinkedHashSet;)I</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getNumberOfCurrentCardinalityCovers</methodName>
        <desc>(Lredupr/SingleTestSubset;Ljava/util/LinkedHashSet;)I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getSetCover</methodName>
        <desc>()Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getSetCover</methodName>
        <desc>()Lredupr/SetCover;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>removeRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>removeRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>getCost</methodName>
        <desc>()D</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getCost</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>setRedundancyFactor</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>removeCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>removeCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMinimumCostTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getCost</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetNotASubset</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>addTestToReducedSuite</methodName>
        <desc>(Lredupr/SingleTestSubset;Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>removeRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>clearCoveringTestSet</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>clearCoveringTestSet</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>innerSize</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>innerSize</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.AllTests</className>
        <methodName>suite</methodName>
        <desc>()Ljunit/framework/TestSuite;</desc>
      </start>
      <end>
        <className>redupr.AllTests</className>
        <methodName>suite</methodName>
        <desc>()Ljunit/framework/TestSuite;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>calculateRequirementRedundancy</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getCoveringTests</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCover</methodName>
        <desc>(Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingKanonizo</methodName>
        <desc>(ILjava/util/Comparator;)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>addToRequirementSubsetUniverse</methodName>
        <desc>(Ljava/util/Set;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addToRequirementSubsetUniverse</methodName>
        <desc>(Ljava/util/Set;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>createFastByteArrayOutputStream</methodName>
        <desc>()Lredupr/FastByteArrayOutputStream;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>getCoveringTestSetString</methodName>
        <desc>(Ljava/util/Set;Ljava/lang/String;)Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getCoveringTestSetString</methodName>
        <desc>(Ljava/util/Set;Ljava/lang/String;)Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetActualSubset</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCover</methodName>
        <desc>(Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.Util</className>
        <methodName>readTestTimings</methodName>
        <desc>(Ljava/lang/String;)Ljava/util/HashMap;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>getSize</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>getSize</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetSubsetBigger</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>isSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;)Z</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>worstCaseMaxNumber</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>worstCaseMaxNumber</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoveringTestSetString</methodName>
        <desc>(Ljava/lang/String;)Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoveringTestSetString</methodName>
        <desc>(Ljava/lang/String;)Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>setName</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubsets</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubsets</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>equals</methodName>
        <desc>(Ljava/lang/Object;)Z</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>write</methodName>
        <desc>([B)V</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>verifyBufferSize</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getRedundancyFactor</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetEqualSets</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetEqualSets</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>setBeforeReduction</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>setBeforeReduction</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testLinkedHashSetSize0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertTrue</methodName>
        <desc>(Z)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMaximumAverageRedundancyFactorTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>findMaximumAverageRedundancyFactorTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetActualSubset</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetActualSubset</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetEqualSets</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>write</methodName>
        <desc>([BII)V</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>verifyBufferSize</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMaximumCoverageTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCover</methodName>
        <desc>(Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingGreedy</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>setTestSubsetsSet</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>setTestSubsetsSet</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>costEffectiveness</methodName>
        <desc>(Ljava/util/Set;)D</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getCost</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getCost</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>reset</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>reset</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>getOuterWhileIterationsPrioritization</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getOuterWhileIterationsPrioritization</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingKanonizo</methodName>
        <desc>(ILjava/util/Comparator;)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingKanonizo</methodName>
        <desc>(ILjava/util/Comparator;)Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getBestSingleTestSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;IILjava/lang/String;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getCost</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>longToString</methodName>
        <desc>()Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>longToString</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>setUp</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>setUp</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>saveSetCoverAsCoverageAndTimeFile</methodName>
        <desc>(Lredupr/SetCover;Ljava/lang/String;Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>saveSetCoverAsCoverageAndTimeFile</methodName>
        <desc>(Lredupr/SetCover;Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingReverse</methodName>
        <desc>(I)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>removeRequirementsFromSTSS</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>removeRequirementsFromSTSS</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>getRedundancyFactor</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getRedundancyFactor</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>removeRequirementsFromSTSS</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>removeRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>setUp</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>setUp</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayInputStream</className>
        <methodName>read</methodName>
        <desc>([BII)I</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayInputStream</className>
        <methodName>read</methodName>
        <desc>([BII)I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>sumCosts</methodName>
        <desc>(Ljava/util/Set;)D</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>sumCosts</methodName>
        <desc>(Ljava/util/Set;)D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMaximumRedundancyFactorTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>findMaximumRedundancyFactorTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>calculateRequirementRedundancy</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>equals</methodName>
        <desc>(Ljava/lang/Object;)Z</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getIndex</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCover</methodName>
        <desc>(Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>constructSetCover</methodName>
        <desc>(Ljava/lang/String;)Lredupr/SetCover;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SetCover;I)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SetCover;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetActualSubset</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>isSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;)Z</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayInputStream</className>
        <methodName>skip</methodName>
        <desc>(J)J</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayInputStream</className>
        <methodName>skip</methodName>
        <desc>(J)J</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getPrioritizedSetString</methodName>
        <desc>(Ljava/lang/String;)Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getPrioritizedSetString</methodName>
        <desc>(Ljava/lang/String;)Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>addTestToReducedSuite</methodName>
        <desc>(Lredupr/SingleTestSubset;Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCoverFromBinary</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCoverFromBinary</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingGreedy</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>costEffectiveness</methodName>
        <desc>(Ljava/util/Set;)D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCoverFromBinary</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findHighRedundancyLowCostTests</methodName>
        <desc>(DDDD)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>findHighRedundancyLowCostTests</methodName>
        <desc>(DDDD)Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMaximumRedundancyFactorTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getRedundancyFactor</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>calculateAllRequirementRedundancy</methodName>
        <desc>()Ljava/util/ArrayList;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>calculateAllRequirementRedundancy</methodName>
        <desc>()Ljava/util/ArrayList;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findHighRedundancyLowCostTests</methodName>
        <desc>(DDDD)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getRedundancyFactor</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCoverFromBinary</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getNumberOfCurrentCardinalityCovers</methodName>
        <desc>(Lredupr/SingleTestSubset;Ljava/util/LinkedHashSet;)I</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getBestSingleTestSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;IILjava/lang/String;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getNumberOfCurrentCardinalityCovers</methodName>
        <desc>(Lredupr/SingleTestSubset;Ljava/util/LinkedHashSet;)I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>calculateRequirementRedundancy</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>calculateRequirementRedundancy</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCover</methodName>
        <desc>(Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>setCost</methodName>
        <desc>(D)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getPrioritizedSetString</methodName>
        <desc>(Ljava/lang/String;)Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getIndex</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getCoveringTests</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>addTestToReducedSuite</methodName>
        <desc>(Lredupr/SingleTestSubset;Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>removeSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getCoveringTests</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubsets</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>containsSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Z</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>containsSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Z</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>worstCaseMaxSize</methodName>
        <desc>()D</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>worstCaseMaxSize</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>saveSetCoverAsCoverageAndTimeFile</methodName>
        <desc>(Lredupr/SetCover;Ljava/lang/String;Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.GenerateCoverageEffectivenessData</className>
        <methodName>saveCoverageData</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>costEffectiveness</methodName>
        <desc>(Ljava/util/Set;)D</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>costEffectiveness</methodName>
        <desc>(Ljava/util/Set;)D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>getBeforeReduction</methodName>
        <desc>()Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getBeforeReduction</methodName>
        <desc>()Lredupr/SetCover;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingKanonizo</methodName>
        <desc>(Ljava/util/Comparator;)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetNotASubset</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>isSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;)Z</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>removeSingleTestSubsets</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>removeSingleTestSubsets</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>setName</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>setName</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>calculateAllRequirementRedundancy</methodName>
        <desc>()Ljava/util/ArrayList;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>setRedundancyFactor</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>removeSingleTestSubsets</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>worstCaseMinSize</methodName>
        <desc>()D</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>worstCaseMinSize</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>write</methodName>
        <desc>([B)V</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>write</methodName>
        <desc>([B)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCover</methodName>
        <desc>(Ljava/util/LinkedHashSet;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findHighCoverageLowCostTests</methodName>
        <desc>(DDDD)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>coversRequirementSubsetUniverse</methodName>
        <desc>(Ljava/util/LinkedHashSet;)Z</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>coversRequirementSubsetUniverse</methodName>
        <desc>(Ljava/util/LinkedHashSet;)Z</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>buildCardinalityList</methodName>
        <desc>(I)Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>getByteArray</methodName>
        <desc>()[B</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>getByteArray</methodName>
        <desc>()[B</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>removeTestsFromRSU</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>toString</methodName>
        <desc>()Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>toString</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getIndex</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>setCoveringTestSet</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingGreedy</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>removeCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>addTestToReducedSuite</methodName>
        <desc>(Lredupr/SingleTestSubset;Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>addTestToReducedSuite</methodName>
        <desc>(Lredupr/SingleTestSubset;Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>createFastByteArrayOutputStream</methodName>
        <desc>()Lredupr/FastByteArrayOutputStream;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>createFastByteArrayOutputStream</methodName>
        <desc>()Lredupr/FastByteArrayOutputStream;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>write</methodName>
        <desc>(I)V</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>write</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetEqualSets</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertTrue</methodName>
        <desc>(Z)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>saveSetCoverAsCoverageAndTimeFile</methodName>
        <desc>(Lredupr/SetCover;Ljava/lang/String;Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.GenerateCoverageEffectivenessData</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>setIndex</methodName>
        <desc>(I)V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>setIndex</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>calculateAllRequirementRedundancy</methodName>
        <desc>()Ljava/util/ArrayList;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getBestSingleTestSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;IILjava/lang/String;)Lredupr/SingleTestSubset;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMaximumCoverageTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>findMaximumCoverageTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingGreedy</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingGreedy</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>getIndex</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getIndex</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>setRequirementSubsetUniverse</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>getCoveringTests</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getCoveringTests</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getCoveringTests</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>addTestToReducedSuite</methodName>
        <desc>(Lredupr/SingleTestSubset;Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>coversRequirementSubsetUniverse</methodName>
        <desc>(Ljava/util/LinkedHashSet;)Z</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.AllTests</className>
        <methodName>main</methodName>
        <desc>([Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.AllTests</className>
        <methodName>main</methodName>
        <desc>([Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>write</methodName>
        <desc>([BII)V</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>write</methodName>
        <desc>([BII)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingGreedy</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingGreedy</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>sumCosts</methodName>
        <desc>(Ljava/util/Set;)D</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getCost</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCoverFromBinary</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getBestSingleTestSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;IILjava/lang/String;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>buildCardinalityList</methodName>
        <desc>(I)Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findHighRedundancyLowCostTests</methodName>
        <desc>(DDDD)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>removeSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingKanonizo</methodName>
        <desc>(Ljava/util/Comparator;)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingKanonizo</methodName>
        <desc>(Ljava/util/Comparator;)Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCoverFromBinary</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>setCost</methodName>
        <desc>(D)V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>setCost</methodName>
        <desc>(D)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCoverFromBinary</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;ID)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCoverFromBinary</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>createFastByteArrayOutputStream</methodName>
        <desc>()Lredupr/FastByteArrayOutputStream;</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingGreedy</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>purchase</methodName>
        <desc>(D)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>coverageValue</methodName>
        <desc>(Ljava/util/Set;)D</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>coverageValue</methodName>
        <desc>(Ljava/util/Set;)D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>setIndex</methodName>
        <desc>(I)V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>setIndex</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>sumInnerCosts</methodName>
        <desc>()D</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>removeRequirementSubsets</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>setDesiredEffectiveness</methodName>
        <desc>(D)V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>setDesiredEffectiveness</methodName>
        <desc>(D)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setLooksAhead</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getCost</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>setUp</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getPurchasePrice</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingReverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingReverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>setTestSubsetsSet</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getCoveringTests</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingRandom</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingRandom</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>sumInnerCosts</methodName>
        <desc>()D</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>sumInnerCosts</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCoverFromBinary</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>constructSetCoverFromBinary</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)Lredupr/SetCover;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>getIndex</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getIndex</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>purchase</methodName>
        <desc>(D)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMaximumRedundancyFactorTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>removeRequirementSubsets</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.RequirementSubset</className>
        <methodName>toString</methodName>
        <desc>()Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>toString</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSetString</methodName>
        <desc>(Ljava/lang/String;)Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSetString</methodName>
        <desc>(Ljava/lang/String;)Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findHighCoverageLowCostTests</methodName>
        <desc>(DDDD)Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getBestSingleTestSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;IILjava/lang/String;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getBestSingleTestSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;IILjava/lang/String;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingOriginal</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>setUp</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>isSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;)Z</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>isSubset</methodName>
        <desc>(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashSet;)Z</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>prioritizeUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>reduceUsingDG</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>getReductionTime</methodName>
        <desc>()J</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getReductionTime</methodName>
        <desc>()J</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>setIndex</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertTrue</methodName>
        <desc>(Z)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getCoveringTestSetString</methodName>
        <desc>(Ljava/lang/String;)Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getIndex</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getName</methodName>
        <desc>()Ljava/lang/String;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testLinkedHashSetSize0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testLinkedHashSetSize0</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>worstCaseMinNumber</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>worstCaseMinNumber</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getCoveringTestSetString</methodName>
        <desc>(Ljava/lang/String;)Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getIndex</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testSomeSetCoverStuffTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCover</methodName>
        <desc>(Ljava/util/LinkedHashSet;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>constructSetCover</methodName>
        <desc>(Ljava/util/LinkedHashSet;)Lredupr/SetCover;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTestSubset</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertTrue</methodName>
        <desc>(Z)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSetString</methodName>
        <desc>(Ljava/lang/String;)Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getIndex</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>toString</methodName>
        <desc>()Ljava/lang/String;</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getCost</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>saveSetCoverAsCoverageAndTimeFile</methodName>
        <desc>(Lredupr/SetCover;Ljava/lang/String;Ljava/lang/String;)V</desc>
      </start>
      <end>
        <className>redupr.GenerateCoverageEffectivenessData</className>
        <methodName>saveTimingData</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>getReducedSingleTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getReducedSingleTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(I)V</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>calculateRequirementRedundancy</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMinimumCoverageTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>findMinimumCoverageTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>newRandomizer</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>newRandomizer</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>constructSetCover</methodName>
        <desc>(Ljava/util/LinkedHashSet;)Lredupr/SetCover;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.FastByteArrayOutputStream</className>
        <methodName>getInputStream</methodName>
        <desc>()Ljava/io/InputStream;</desc>
      </start>
      <end>
        <className>redupr.FastByteArrayInputStream</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>([BI)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getSingleTestSubsetFromSingleTest</methodName>
        <desc>(Lredupr/SingleTest;)Lredupr/SingleTestSubset;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>removeSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>removeSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>reduceUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testReduceUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>getCoverPickSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertTrue</methodName>
        <desc>(Z)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(II)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMaximumCostTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>calculateRequirementRedundancy</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>setRedundancyFactor</methodName>
        <desc>(I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetSubsetBigger</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetSubsetBigger</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>prioritizeUsingHGS</methodName>
        <desc>(Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetNotASubset</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetNotASubset</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>removeRequirementSubsets</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>removeRequirementSubsets</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>coversRequirementSubsetUniverse</methodName>
        <desc>(Ljava/util/LinkedHashSet;)Z</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getRequirementSubsetSet</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingGreedy</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>clone</methodName>
        <desc>()Ljava/lang/Object;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingAdamSmithFirstExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>findMaximumCostTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>findMaximumCostTests</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SingleTest</className>
        <methodName>getDesiredEffectiveness</methodName>
        <desc>()D</desc>
      </start>
      <end>
        <className>redupr.SingleTest</className>
        <methodName>getDesiredEffectiveness</methodName>
        <desc>()D</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>getPrioritizationTime</methodName>
        <desc>()J</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getPrioritizationTime</methodName>
        <desc>()J</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>calculateAllRequirementRedundancy</methodName>
        <desc>()Ljava/util/ArrayList;</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>getCoveringTests</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>addRequirementSubset</methodName>
        <desc>(Lredupr/RequirementSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingAdamSmithFirstExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Ljava/lang/String;I)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.ReduceUsingDelayedGreedy</className>
        <methodName>removeRequirementsFromSTSS</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getTestSubsets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingHGSExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testIsSubsetNotASubset</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertFalse</methodName>
        <desc>(Z)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>&lt;init&gt;</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingHGSExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>getPrioritizedSets</methodName>
        <desc>()Ljava/util/LinkedHashSet;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingWalcottExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.RequirementSubset</className>
        <methodName>addCoveringTest</methodName>
        <desc>(Lredupr/SingleTest;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testPrioritizeUsingTallamGuptaExampleLA2</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getRequirementSubsetUniverse</methodName>
        <desc>()Ljava/util/Set;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingTallamGuptaExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>assertEquals</methodName>
        <desc>(Ljava/lang/String;Ljava/lang/String;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA1</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingHGSExampleLA0</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addSingleTestSubset</methodName>
        <desc>(Lredupr/SingleTestSubset;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingHarroldGuptaSoffa</className>
        <methodName>testReduceUsingTallamGuptaExampleLA1</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.ReduceUsingHarroldGuptaSoffa</className>
        <methodName>setSetCover</methodName>
        <desc>(Lredupr/SetCover;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubsets</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>addRequirementSubsets</methodName>
        <desc>(Ljava/util/LinkedHashSet;)V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>prioritizeUsingRandom</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>reduceUsingGreedy</methodName>
        <desc>()Ljava/util/Set;</desc>
      </start>
      <end>
        <className>redupr.SingleTestSubset</className>
        <methodName>getTest</methodName>
        <desc>()Lredupr/SingleTest;</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.SetCover</className>
        <methodName>getOuterWhileIterations</methodName>
        <desc>()I</desc>
      </start>
      <end>
        <className>redupr.SetCover</className>
        <methodName>getOuterWhileIterations</methodName>
        <desc>()I</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
    <de.unisb.cs.st.javalanche.coverage.distance.Tuple>
      <start>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </start>
      <end>
        <className>redupr.TestReduceUsingDelayedGreedy</className>
        <methodName>testPrioritizeUsingWalcottExample</methodName>
        <desc>()V</desc>
      </end>
    </de.unisb.cs.st.javalanche.coverage.distance.Tuple>
  </connections>
</de.unisb.cs.st.javalanche.coverage.distance.ConnectionData>