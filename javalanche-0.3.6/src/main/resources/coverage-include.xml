<project name="mutation-include" default="">

	<target name="createCoverageData" description="* Create coverage data for an original unmutated run" depends="mutationDir">
		<property name="create.coverage.mutation.javaagent" value="-javaagent:${javalanche.mutation.javaagent}"/>
		<property name="create.coverage.memory" value="-Xmx${javalanche.maxmemory}" />
		<property name="create.coverage.mutation.run.mode" value="-Dmutation.run.mode=create-coverage"/>
		<property name="create.coverage.javalanche.package.prefix" value="-Dmutation.package.prefix=${project.prefix}"/>
		<property name="create.coverage.javalanche.project.test.suite" value="-Dmutation.test.suite=${project.test.suite}"/>
		<property name="create.coverage.verbose" value="-verbose"/>
		
		<property name="create.coverage.trace" value="-Djavalanche.trace.returns=true"/>
		
		<path id="create.coverage.classpath.add">
			<path refid="mutation.classpath"/>
		</path>
		
		<antcall target="test-javalanche">
			<!--${create.coverage.verbose}-->
			<param name="javalanche.arg.line" value=" ${create.coverage.mutation.javaagent} ${create.coverage.memory} ${create.coverage.mutation.run.mode} ${create.coverage.javalanche.package.prefix} ${create.coverage.javalanche.project.test.suite} ${create.coverage.trace}" />
			<reference refid="create.coverage.classpath.add" torefid="javalanche.classpath.add"/>
		</antcall>
	</target>
	
	
	
		
	<target name="runMutationsCoverage" description="* run a given mutation tasks with line coverage tracing enabled">
	
		<condition property="run.mutations.single.task.mode" value="-Djavalanche.single.task.mode=true" else="-Djavalanche.single.task.mode=false">
			<isset property="single.task.mode"/>
		</condition>
		
		<property name="run.mutations.mutation.javaagent" value="-javaagent:${javalanche.mutation.javaagent}"/>
		<property name="run.mutations.memory" value="-Xmx${javalanche.maxmemory}"/>
		<property name="run.mutations.mutation.run.mode" value="-Dmutation.run.mode=mutation-coverage"/>
		<property name="run.mutations.javalanche.package.prefix" value="-Dmutation.package.prefix=${project.prefix}"/>
		<property name="run.mutations.javalanche.project.test.suite" value="-Dmutation.test.suite=${project.test.suite}"/>
		<property name="run.mutations.mutation.file" value="-Dmutation.file=${mutation.file}"/>
		<property name="run.mutations.mutation.result.file" value="-Dmutation.result.file=${mutation.result.file}"/>
		<property name="run.mutations.verbose" value="-verbose"/>
		<property name="run.mutations.field.file.arg" value="-Djavalanche.invariant.field.file=${field.file}"/>
		<property name="run.mutations.checker.file" value="-Dinvariant.checker.file=${invariant.checker.file}"/>
		<property name="run.mutations.verbose.summary" value="-Dverbose.invariant.summary=false"/>
		<property name="run.mutations.javalanche.invariant.mode" value="-Dinvariant.mode=INVARIANT"/>
		<property name="run.mutations.trace.returns" value="-Djavalanche.trace.returns=true"/>

		<path id="run.mutations.classpath.add">
			<path refid="mutation.classpath"/>
		</path>

		<!--${run.mutations.verbose}-->
		<antcall target="test-javalanche">
			<param name="javalanche.arg.line" value=" -verify ${run.mutations.mutation.javaagent} ${run.mutations.memory} ${run.mutations.mutation.run.mode} ${run.mutations.javalanche.package.prefix} ${run.mutations.javalanche.project.test.suite} ${run.mutations.mutation.file} ${run.mutations.mutation.result.file} ${run.mutations.field.file.arg} ${run.mutations.checker.file} ${run.mutations.verbose.summary} ${run.mutations.javalanche.invariant.mode} ${run.mutations.trace.returns} ${run.mutations.single.task.mode}" />
			<reference refid="run.mutations.classpath.add" torefid="javalanche.classpath.add"/>
		</antcall>
	</target>
	
	
	<target name="cleanCoverage" description="* Delete all data produced by the coverage tasks" depends="mutationDir">
		<delete dir="mutation-files/tracer/"/>
	</target>
	
	
	<target name="cleanTrace" description="* Delete the trace line coverage and return value data" depends="mutationDir">
		<delete dir="mutation-files/tracer/line/"/>
		<delete dir="mutation-files/tracer/data/"/>
	</target>
	
	
	<target name="createCoverageDataMult" description="* Create line and return coverage data for multiple permuted runs.">
		<property name="coverage.mult.mutation.javaagent" value="-javaagent:${javalanche.mutation.javaagent}"/>
		<property name="coverage.mult.memory" value="-Xmx${javalanche.maxmemory}"/>
		<property name="coverage.mult.mutation.run.mode" value="-Dmutation.run.mode=test3"/>
		<property name="coverage.mult.javalanche.package.prefix" value="-Dmutation.package.prefix=${project.prefix}"/>
		<property name="coverage.mult.javalanche.project.test.suite" value="-Dmutation.test.suite=${project.test.suite}"/>
		<property name="coverage.mult.listener" value="-Djavalanche.mutation.test.listener=de.unisb.cs.st.javalanche.coverage.CoverageMutationListener"/>
		<property name="coverage.mult.trace" value="-Djavalanche.trace.returns=true"/>
		
		
		<path id="coverage.mult.classpath.add">
			<path refid="mutation.classpath"/>
		</path>
		
		<antcall target="test-javalanche">
			<param name="javalanche.arg.line" value=" ${coverage.mult.mutation.javaagent} ${coverage.mult.memory} ${coverage.mult.mutation.run.mode} ${coverage.mult.javalanche.package.prefix} ${coverage.mult.javalanche.project.test.suite} ${coverage.mult.listener} ${coverage.mult.trace}" />
			<reference refid="coverage.mult.classpath.add" torefid="javalanche.classpath.add"/>
		</antcall>
	</target>
	
	
	
	<target name="checkCoverageData" description="* Compare the traces generated by createCoverageDataMult. Ideally no differences should occur.">
		<java classname="de.unisb.cs.st.javalanche.coverage.CompareTraces" maxmemory="${javalanche.maxmemory}" fork="true">
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>
	
	
	
	<target name="analyzeManual" description="">
		<java classname="de.unisb.cs.st.javalanche.coverage.experiment.ManualResultsAnalyzer" maxmemory="${javalanche.maxmemory}" fork="true">
		<jvmarg line="-Dmutation.package.prefix=${project.prefix}"/>	
		<classpath>
				<path refid="mutation.classpath" />
		</classpath>

		</java>
	</target>
	
		
	<target name="analyzeManualInv" description="">
		<java classname="de.unisb.cs.st.javalanche.coverage.experiment.ManualnvariantAnalyzer" maxmemory="${javalanche.maxmemory}" fork="true">
		<jvmarg line="-Dmutation.package.prefix=${project.prefix}"/>	
		<classpath>
				<path refid="mutation.classpath" />
		</classpath>

		</java>
	</target>


	<target name="makeDistances" description="">
		<java classname="de.unisb.cs.st.javalanche.coverage.distance.MethodDistances" maxmemory="${javalanche.maxmemory}" fork="true">
		<jvmarg line="-Dmutation.package.prefix=${project.prefix}"/>	
		<classpath>
				<path refid="mutation.classpath" />
		</classpath>

		</java>
	</target>


</project>
