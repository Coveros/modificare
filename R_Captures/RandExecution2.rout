> source("src/clusterinit.R")
> source("FDP_Start.R")
> zLoadFit()
> zLoadRand()
> cl101 <- Alden101NewDellClusterInit()
foreach: simple, scalable parallel programming from REvolution Computing
Use REvolution R for scalability, fault tolerance and more.
http://www.revolution-computing.com
> clusterExport(cl101, "APFD")
> clusterExport(cl101, "Rand")
> clusterExport(cl101, "Rand_Multi_Rep")
> clusterExport(cl101, "Rand_Rep")
> clusterExport(cl101, "makeLogFM")
> registerDoSNOW(cl101)
> DS_Rand <- Rand_Multi_Rep(fFM = "FaultCoverageReports/DataStructures_Fault.dat", 
+ Seed = 100, Trials = 2, cPopSize = c(10, 50, 100, 500, 1000, 
+ 
+ 5000))
[1] "Configurarions: "
                                            fFM Trials cPopSize Seed
1 FaultCoverageReports/DataStructures_Fault.dat      2       10  913
2 FaultCoverageReports/DataStructures_Fault.dat      2       50  490
3 FaultCoverageReports/DataStructures_Fault.dat      2      100  510
4 FaultCoverageReports/DataStructures_Fault.dat      2      500  679
5 FaultCoverageReports/DataStructures_Fault.dat      2     1000  832
6 FaultCoverageReports/DataStructures_Fault.dat      2     5000  334
  |                                                                              |                                                                      |   0%  |                                                                              |                                                                      |   0%
  |                                                                              |============                                                          |  17%  |                                                                              |                                                                      |   0%
  |                                                                              |=======================                                               |  33%  |                                                                              |                                                                      |   0%
  |                                                                              |===================================                                   |  50%  |                                                                              |                                                                      |   0%
  |                                                                              |===============================================                       |  67%  |                                                                              |                                                                      |   0%
  |                                                                              |==========================================================            |  83%  |                                                                              |                                                                      |   0%
  |                                                                              |======================================================================| 100%
> DS_Rand
    V1 V2  V3  V4 V5  V6  V7  V8  V9 V10 V11 V12 V13 V14 V15 V16 V17 V18 V19
1   14 76  53  13 63  77  75  49  88  25   2  71  41  32  34  81  83  96  97
2   56 79   3  10 71  62  35 106  65 100  16  55  15 103  70  95  51  49  99
3  102 27  57  65 36  35 103  23   4  98  96  76  62  56  78  67  45  74 101
4  102 42  71  98 40  68  96 103  87  65  41  83  35  20  18  38  61  37  54
5   18 19  89  78 90  37 102  38   7   9  93  51  88  61  84  30  81  54  58
6  102 64  73  40 46  79  61  55  88  62  77  27  65  96  91  85  59  16  29
7   78 84  40  88 65 102  26  31 106  58 100  79  97  27  93  55  54  46   1
8   21  2  42  57 79  15  74 104 102 106  45  98  75  78  30  99  28  70   4
9   19 29  16  67 35  31  46  63 102  30  15  28  23  12  72   4  36  40   6
10  49 45  94 102 65  95  99  89  34  55  58  11  76  72  68  92  57  39  19
11  48 87   3  61 20  89  35 106  91  23  93  38  69  77  43  60  10  27  33
12  49 41 102  97 27  14  57  11   6   8  48  23   3  94  31  75  24  10  43
   V20 V21 V22 V23 V24 V25 V26 V27 V28 V29 V30 V31 V32 V33 V34 V35 V36 V37 V38
1   78  64  91  31  87  46 100  94   8  89  79  23  58  30 104  95  40  80 102
2   63 102  33  59  46  13  37  73  77  52  81  92  97  19  64 104  40  89  86
3   55  64  63  48  54  33  99  19  83  29  38  70  79  87  49  68  39  34 106
4   63  48  31  79   8  29  64  53  49  84  67  26 100  77  99  27  66  85  24
5  105  77  67  70  76  91   3  39  86  23  48  68  26  17  95  83  96  69  52
6   14  71  35   6  15  10  86  74  39  38  83  48 106  23 105  68  89  49  67
7   32  76  70  10  98  18  47  42  41  17  20  50  67  61  66  49   2  29  44
8   73  35  29  66  25  27   3  47 103 105  67  89  77  61  62  37  65  12  23
9   11  96 104  50  49  76   5  48  51  92  58  87  86  78  41  52  84  74  81
10 105  12  53  35  62   8  30 103  84  25  73  86  71  36  67  31  20  51  78
11  30  97  67  53   8 102  47  74   4  49  18  88 100   5  63  17  37  40  11
12  42  58   5 106  47  83  28  36  76  99  12 104  63  84  74  66  92  33  34
   V39 V40 V41 V42 V43 V44 V45 V46 V47 V48 V49 V50 V51 V52 V53 V54 V55 V56 V57
1    6  60  45  57  11  67  82  90  68  86  56   1  73  48  36  51  37  39  47
2   93  23  24  31  83  57  17  38   9  66   1  20  54  74  43   4  28  84 101
3    7  46  13  91  44  90  37  77  61 104  26  30  11 105  51  69  14  17  82
4   11 101   4  13   1  72  88  36  59  74  14  62  93  57   3  95 106 104  21
5   62  74 100  57  29 106   8  35  27  53  28  66  24 101  33  49  94  10  42
6   78  93   9  19  44  34  51 100  66  47  81  98  25  92 103   7   1   5  58
7  103  56   4  63  71   3  91  87  75  15  33  16  57  37  19 104  85  48  89
8   51  69   7  41   5  87  64  17  82  46  18  86  50  49   1  58  44   6  81
9   10  34  13  24  94  14  75  65  17  27  60  99  54  56  77  79  95  83  62
10  37  91  97  85   6   9  50 104  32 106  77  61  14  47   7  63  48  81   1
11  36  52   9  78  84  39  58  24  85  82  15  42  16  75  81  13  95  14  32
12  90  89  78  77  29  16  64  13  35  37   4  15  17  55  61  30  50   9  45
   V58 V59 V60 V61 V62 V63 V64 V65 V66 V67 V68 V69 V70 V71 V72 V73 V74 V75 V76
1   98  85 105  16  21  26  33 101   7  44  18  28  43   4  59  66  99  74  20
2    2  50  25  85   7  39  96  32  69   6  48  21  14  98  60  47  12  82  29
3   12  92  32  58  24  93  25  52  88  40  41  97  22  86  72  84  85   2  28
4   32  92  75  76   5  43  12  50  81  10  55  30  70  28  46  73  60   7  47
5   73   6  14  59  22  40  36  25  41  31  47  75  11  12   2  21  46   5  87
6   52  50  31   4  53  32  80  24  56  76   2  57  43  28  12  54  60  41  26
7   60  90  13  39  34  95  99 105   8  59  74  86  35   6  28  43  30   7  68
8   52  54   8  80  31  59  60  33  40 101  72  53  26  19  84  11  68  97  76
9   33  37  38  70  73  68  89  25  20  55  64  97  90  32   7  98  45  26  42
10  13  40 101  18   4  15  90  69  38  22  96  46  52  54  44  23  88  10  56
11  98  71  79  50   7  55 105 104  62  51  83  45  34  59  73  92  25  94  54
12 101  86  85  59  72  18  51 103  87  20  46  65  40  62  73  71  91  56  95
   V77 V78 V79 V80 V81 V82 V83 V84 V85 V86 V87 V88 V89 V90 V91 V92 V93 V94 V95
1    3  55  69 106   5  62  22  92  61  29   9  10  50  42  27  70 103  24  84
2   36  78  76  45   8  61  34  44  88  30  53  68  27  72  75  67  11  91  26
3   81  75  71  50   9  10  43   3   8  42  89 100  31  73  95   6  16   5  94
4   45  44  94  97  33  22  82  52  69  89   2  16  15  56  91   9  58  90  39
5   85  34 103  71  97  99  80   1  60  98  13 104  82  72  50  56  15  45  55
6   22   3 101  18  84  69  45   8  42  87  13  17 104  75  37  63  30  95  33
7   14  72  51  83  12   5  23  38  24  96  73  52  11   9  77  21  62 101  80
8   55  34  91  48  43  13  94  92  20  96  90  32  56  16  22  39  38  14  63
9    2  57  53  71 105  21  39  61  44   3   9 103  59  69  18  47  93  85   8
10  83  24  26  33  59  74  43  79  28  80   2  70  66  87 100  60  93  17   3
11  57  70  28   2  22  31   6  99  56  29  46  96  76  12  65   1  64  90  68
12  22  53  38 100   7  98  96  67  70  54  44  80  69  68   1  79 105  25  19
   V96 V97 V98 V99 V100 V101 V102 V103 V104 V105 V106 Sep       Fit Seed
1   72  52  38  65   12   19   54   17   93   15   35  NA 0.6048800  931
2   87   5  41 105   90   94   80   22   58   18   42  NA 0.5888365  139
3   80   1  21  20   15   18   66   59   47   60   53  NA 0.6856802  854
4   80  34  17  78   86   23    6  105   51   19   25  NA 0.6359481  436
5   20  79  64  32   63   65    4   92   44   16   43  NA 0.6476532  997
6   21  99  90  20   82   94   97   70   36   11   72  NA 0.6590089  442
7   94  69  45  81   82   92   22   53   36   25   64  NA 0.6680352  295
8   93 100  85  10   83   71    9   95   36   24   88  NA 0.6630561  109
9   82   1  80  43  101   66   22  106  100   88   91  NA 0.6837002   71
10  42  16  27  29   21   82   64   75    5   41   98  NA 0.6861461  225
11  41  21  19  26   66   80   86   72  101  103   44  NA 0.6892907  981
12  52  93   2  21   39   88   60   26   82   81   32  NA 0.7078092  543
   cPopSize Runtime Trials                                           fFM
1        10   0.087      2 FaultCoverageReports/DataStructures_Fault.dat
2        10   0.087      2 FaultCoverageReports/DataStructures_Fault.dat
3        50   0.444      2 FaultCoverageReports/DataStructures_Fault.dat
4        50   0.443      2 FaultCoverageReports/DataStructures_Fault.dat
5       100   0.886      2 FaultCoverageReports/DataStructures_Fault.dat
6       100   0.886      2 FaultCoverageReports/DataStructures_Fault.dat
7       500   4.567      2 FaultCoverageReports/DataStructures_Fault.dat
8       500   4.566      2 FaultCoverageReports/DataStructures_Fault.dat
9      1000   9.217      2 FaultCoverageReports/DataStructures_Fault.dat
10     1000   9.216      2 FaultCoverageReports/DataStructures_Fault.dat
11     5000  45.917      2 FaultCoverageReports/DataStructures_Fault.dat
12     5000  45.916      2 FaultCoverageReports/DataStructures_Fault.dat
> DS_Rand <- Rand_Multi_Rep(fFM = "FaultCoverageReports/DataStructures_Fault.dat", 
+ Seed = 100, Trials = 1000, cPopSize = c(10, 50, 100, 500, 
+ 
+ 1000, 5000))
[1] "Configurarions: "
                                            fFM Trials cPopSize Seed
1 FaultCoverageReports/DataStructures_Fault.dat   1000       10   13
2 FaultCoverageReports/DataStructures_Fault.dat   1000       50  806
3 FaultCoverageReports/DataStructures_Fault.dat   1000      100  781
4 FaultCoverageReports/DataStructures_Fault.dat   1000      500  531
5 FaultCoverageReports/DataStructures_Fault.dat   1000     1000  585
6 FaultCoverageReports/DataStructures_Fault.dat   1000     5000   94
  |                                                                              |                                                                      |   0%  |                                                                              |                                                                      |   0%
  |                                                                              |============                                                          |  17%  |                                                                              |                                                                      |   0%
  |                                                                              |=======================                                               |  33%  |                                                                              |                                                                      |   0%
  |                                                                              |===================================                                   |  50%  |                                                                              |                                                                      |   0%
  |                                                                              |===============================================                       |  67%  |                                                                              |                                                                      |   0%
  |                                                                              |==========================================================            |  83%  |                                                                              |                                                                      |   0%
  |                                                                              |======================================================================| 100%
> write.table(DS_Rand, "datasets/DS_Rand2.dat")
> stopCluster(cl101)
